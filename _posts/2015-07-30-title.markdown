---
layout: post
title: GitLab CI automatic release
date: 2019-07-30 15:09:00
description: A quick look at using the Releases API to automatically create a release for a GitLab project as part of the CI. 
---

GitLab currently does not provide a straight forward way of creating releases for a repository as part of the
GitLab CI. At the time of writing, there is an open <a href="https://gitlab.com/gitlab-org/gitlab-ce/issues/56022">issue</a> 
discussing how to incorporate releases into GitLab CI. In the meantime the <a href="https://docs.gitlab.com/ee/api/releases/">Releases API</a> 
provides a RESTful way of accomplishing this. 

To create a release using GitLab CI you first need an access token. These can be generated in your 
<a href="https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html">GitLab account</a>. Once you 
have your access token <a href="https://docs.gitlab.com/ee/ci/variables/#via-the-ui">assign</a> it as 
an environment variable as part of the project's CI/CD. The environment variable `releasetoken` is used in 
the example below.

Below is an example of how to set this up in `.gitlab-ci.yml`. This `POST` creates a release for tagged versions. The Releases API can also
be use to modify a release, which may be useful for attaching a binary generated by the CI pipeline. 

{% highlight yaml %}

stages:
  - release

variables:
  releasetoken: $releasetoken

release:
  stage: release
  image: tutum/curl
  script: 
    - |
      curl --data "{\"tag_name\": \"${CI_COMMIT_TAG}\",
        \"name\": \"${CI_PROJECT_NAME} ${CI_COMMIT_TAG}\",
        \"description\": \"${CI_COMMIT_TAG} release of ${CI_PROJECT_NAME}\"}" \
        --header "Content-Type: application/json" \
        --header "Private-Token: ${releasetoken}" \
        --request POST \
        "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/releases"
  only:
    - tags
{% endhighlight %}
